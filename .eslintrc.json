{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "simple-import-sort", "jest"],
  "extends": [
    "plugin:@next/next/recommended",
    "airbnb-typescript",
    "airbnb/hooks",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:jest/recommended",
    "prettier"
  ],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/extensions": [".js", ".jsx", ".ts", ".tsx"],
    "import/resolver": {
      "typescript": {
        "project": ["packages/*/tsconfig.json", "apps/*/tsconfig.json"]
      }
    }
  },
  "parserOptions": {
    "ecmaVersion": 6,
    "project": ["packages/*/tsconfig.json", "apps/*/tsconfig.json"]
  },
  "overrides": [
    {
      // assuming Next.js application
      "files": "./apps/**/pages/**/*.{ts,tsx}",
      "rules": {
        "react/react-in-jsx-scope": "off",
        "import/no-default-export": "off", // pages have to have a default export
        "import/prefer-default-export": "error",
        "@typescript-eslint/explicit-module-boundary-types": [
          // So we can infer prop types
          "warn",
          { "allowedNames": ["getStaticProps", "getStaticPaths", "render"] }
        ]
      }
    },
    {
      // assuming Next.js application
      "files": "./apps/*/src/**/*.{ts,tsx}",
      "rules": {
        "react/react-in-jsx-scope": "off"
      }
    }
  ],
  "rules": {
    "react/jsx-key": ["error"],

    // Allow most functions to rely on type inference. If the function is exported, then `@typescript-eslint/explicit-module-boundary-types` will ensure it's typed.
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-floating-promises": "off",

    // Doesnt work for FC: https://github.com/yannickcr/eslint-plugin-react/issues/2353
    "react/prop-types": "off",
    "react/require-default-props": "off",

    // Prefer non-default exports https://basarat.gitbooks.io/typescript/docs/tips/defaultIsBad.html
    "import/no-default-export": "error",
    "import/prefer-default-export": "off",

    // Auto-sort imports
    "sort-imports": "off",
    "import/order": "off",
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",

    // Using a type system makes it safe enough to spread props
    "react/jsx-props-no-spreading": "off",

    // Doesnt work in monorepo
    "@next/next/no-html-link-for-pages": "off",

    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "ts-expect-error": "allow-with-description",
        "minimumDescriptionLength": 5
      }
    ]
  }
}
